apiVersion: batch/v1
kind: Job
metadata:
  name: prowlarr-setup
  namespace: media-v2
spec:
  ttlSecondsAfterFinished: 300
  template:
    spec:
      restartPolicy: OnFailure
      containers:
      - name: setup
        image: curlimages/curl:latest
        command: ["/bin/sh"]
        env:
        - name: PROWLARR_API_KEY
          valueFrom:
            secretKeyRef:
              name: media-api-keys
              key: prowlarr-api-key
        - name: SONARR_API_KEY
          valueFrom:
            secretKeyRef:
              name: media-api-keys
              key: sonarr-api-key
        - name: RADARR_API_KEY
          valueFrom:
            secretKeyRef:
              name: media-api-keys
              key: radarr-api-key
        args:
        - -c
        - |
          set -e
          echo "Waiting for Prowlarr to be ready..."
          until curl -f http://prowlarr:9696/prowlarr/api/v1/health -H "X-Api-Key: $PROWLARR_API_KEY"; do
            echo "Prowlarr not ready yet, waiting..."
            sleep 5
          done
          echo "Prowlarr is ready!"
          
          # Check if Sonarr already exists
          echo "Checking existing applications..."
          EXISTING_APPS=$(curl -s http://prowlarr:9696/prowlarr/api/v1/applications -H "X-Api-Key: $PROWLARR_API_KEY")
          
          # Add Sonarr if not exists
          if ! echo "$EXISTING_APPS" | grep -q "Sonarr"; then
            echo "Adding Sonarr to Prowlarr..."
            curl -X POST http://prowlarr:9696/prowlarr/api/v1/applications \
              -H "X-Api-Key: $PROWLARR_API_KEY" \
              -H "Content-Type: application/json" \
              -d "{
                \"name\": \"Sonarr\",
                \"implementation\": \"Sonarr\",
                \"configContract\": \"SonarrSettings\",
                \"fields\": [
                  {\"name\": \"prowlarrUrl\", \"value\": \"http://prowlarr:9696\"},
                  {\"name\": \"baseUrl\", \"value\": \"http://sonarr:8989\"},
                  {\"name\": \"apiKey\", \"value\": \"$SONARR_API_KEY\"},
                  {\"name\": \"syncCategories\", \"value\": [5000, 5010, 5020, 5030, 5040, 5045, 5050]},
                  {\"name\": \"animeSyncCategories\", \"value\": [5070]},
                  {\"name\": \"syncLevel\", \"value\": \"fullSync\"}
                ],
                \"tags\": []
              }"
            echo "Sonarr added successfully"
          else
            echo "Sonarr already configured"
          fi
          
          # Add Radarr if not exists  
          if ! echo "$EXISTING_APPS" | grep -q "Radarr"; then
            echo "Adding Radarr to Prowlarr..."
            curl -X POST http://prowlarr:9696/prowlarr/api/v1/applications \
              -H "X-Api-Key: $PROWLARR_API_KEY" \
              -H "Content-Type: application/json" \
              -d "{
                \"name\": \"Radarr\",
                \"implementation\": \"Radarr\",
                \"configContract\": \"RadarrSettings\",
                \"fields\": [
                  {\"name\": \"prowlarrUrl\", \"value\": \"http://prowlarr:9696\"},
                  {\"name\": \"baseUrl\", \"value\": \"http://radarr:7878\"},
                  {\"name\": \"apiKey\", \"value\": \"$RADARR_API_KEY\"},
                  {\"name\": \"syncCategories\", \"value\": [2000, 2010, 2020, 2030, 2040, 2045, 2050]},
                  {\"name\": \"syncLevel\", \"value\": \"fullSync\"}
                ],
                \"tags\": []
              }"
            echo "Radarr added successfully"
          else
            echo "Radarr already configured"
          fi
          
          # Trigger sync
          echo "Triggering application sync..."
          curl -X POST http://prowlarr:9696/prowlarr/api/v1/applications/sync \
            -H "X-Api-Key: $PROWLARR_API_KEY" \
            -H "Content-Type: application/json" \
            -d '{}'
          
          echo "Prowlarr setup complete!"