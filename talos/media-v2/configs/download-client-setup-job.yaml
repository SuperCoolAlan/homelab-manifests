apiVersion: batch/v1
kind: Job
metadata:
  name: download-client-setup
  namespace: media-v2
spec:
  template:
    spec:
      restartPolicy: OnFailure
      containers:
      - name: setup
        image: curlimages/curl:latest
        command: ["/bin/sh"]
        env:
        - name: RADARR_API_KEY
          valueFrom:
            secretKeyRef:
              name: media-api-keys
              key: radarr-api-key
        - name: SONARR_API_KEY
          valueFrom:
            secretKeyRef:
              name: media-api-keys
              key: sonarr-api-key
        - name: SABNZBD_API_KEY
          valueFrom:
            secretKeyRef:
              name: media-api-keys
              key: sabnzbd-api-key
        - name: PROWLARR_API_KEY
          valueFrom:
            secretKeyRef:
              name: media-api-keys
              key: prowlarr-api-key
        - name: BAZARR_API_KEY
          valueFrom:
            secretKeyRef:
              name: media-api-keys
              key: bazarr-api-key
        args:
        - -c
        - |
          set -e

          # Wait for services to be ready
          echo "Waiting for services to be ready..."
          until curl -f http://radarr:7878/api/v3/system/status -H "X-Api-Key: $RADARR_API_KEY" 2>/dev/null; do
            echo "Waiting for Radarr..."
            sleep 5
          done

          until curl -f http://sonarr:8989/api/v3/system/status -H "X-Api-Key: $SONARR_API_KEY" 2>/dev/null; do
            echo "Waiting for Sonarr..."
            sleep 5
          done

          until curl -f http://prowlarr:9696/api/v1/system/status -H "X-Api-Key: $PROWLARR_API_KEY" 2>/dev/null; do
            echo "Waiting for Prowlarr..."
            sleep 5
          done

          until curl -f http://bazarr:6767/api/system/status -H "X-Api-Key: $BAZARR_API_KEY" 2>/dev/null; do
            echo "Waiting for Bazarr..."
            sleep 5
          done

          # Add SABnzbd to Radarr
          echo "Adding SABnzbd to Radarr..."
          RESPONSE=$(curl -w "\nHTTP_STATUS:%{http_code}" -X POST http://radarr:7878/api/v3/downloadclient \
            -H "X-Api-Key: $RADARR_API_KEY" \
            -H "Content-Type: application/json" \
            -d "{
              \"enable\": true,
              \"protocol\": \"usenet\",
              \"priority\": 1,
              \"removeCompletedDownloads\": false,
              \"removeFailedDownloads\": true,
              \"name\": \"SABnzbd\",
              \"fields\": [
                {\"name\": \"host\", \"value\": \"sabnzbd\"},
                {\"name\": \"port\", \"value\": 8080},
                {\"name\": \"useSsl\", \"value\": false},
                {\"name\": \"urlBase\", \"value\": \"\"},
                {\"name\": \"apiKey\", \"value\": \"${SABNZBD_API_KEY}\"},
                {\"name\": \"movieCategory\", \"value\": \"movies\"},
                {\"name\": \"recentMoviePriority\", \"value\": 0},
                {\"name\": \"olderMoviePriority\", \"value\": 0},
                {\"name\": \"checkForFinishedDownloadInterval\", \"value\": 1}
              ],
              \"implementationName\": \"SABnzbd\",
              \"implementation\": \"Sabnzbd\",
              \"configContract\": \"SabnzbdSettings\",
              \"tags\": []
            }" 2>&1)

          HTTP_STATUS=$(echo "$RESPONSE" | grep -o "HTTP_STATUS:[0-9]*" | cut -d: -f2)
          BODY=$(echo "$RESPONSE" | sed '/HTTP_STATUS:/d')

          echo "Response: $BODY"
          echo "HTTP Status: $HTTP_STATUS"

          if [ "$HTTP_STATUS" = "201" ] || [ "$HTTP_STATUS" = "200" ]; then
            echo "Successfully added SABnzbd to Radarr!"
          else
            echo "Failed to add SABnzbd to Radarr"
          fi

          # Add SABnzbd to Sonarr
          echo "Adding SABnzbd to Sonarr..."
          curl -X POST http://sonarr:8989/api/v3/downloadclient \
            -H "X-Api-Key: $SONARR_API_KEY" \
            -H "Content-Type: application/json" \
            -d "{
              \"enable\": true,
              \"protocol\": \"usenet\",
              \"priority\": 1,
              \"removeCompletedDownloads\": false,
              \"removeFailedDownloads\": true,
              \"name\": \"SABnzbd\",
              \"fields\": [
                {\"name\": \"host\", \"value\": \"sabnzbd\"},
                {\"name\": \"port\", \"value\": 8080},
                {\"name\": \"useSsl\", \"value\": false},
                {\"name\": \"apiKey\", \"value\": \"${SABNZBD_API_KEY}\"},
                {\"name\": \"tvCategory\", \"value\": \"tv\"},
                {\"name\": \"recentTvPriority\", \"value\": 0},
                {\"name\": \"olderTvPriority\", \"value\": 0},
                {\"name\": \"checkForFinishedDownloadInterval\", \"value\": 1}
              ],
              \"implementationName\": \"SABnzbd\",
              \"implementation\": \"Sabnzbd\",
              \"configContract\": \"SabnzbdSettings\",
              \"tags\": []
            }" || echo "SABnzbd may already exist in Sonarr"

          # Add SABnzbd to Prowlarr
          echo "Adding SABnzbd download client to Prowlarr..."
          RESPONSE=$(curl -w "\nHTTP_STATUS:%{http_code}" -X POST http://prowlarr:9696/api/v1/downloadclient \
            -H "X-Api-Key: $PROWLARR_API_KEY" \
            -H "Content-Type: application/json" \
            -d "{
              \"enable\": true,
              \"protocol\": \"usenet\",
              \"priority\": 1,
              \"name\": \"SABnzbd\",
              \"fields\": [
                {\"name\": \"host\", \"value\": \"sabnzbd\"},
                {\"name\": \"port\", \"value\": 8080},
                {\"name\": \"useSsl\", \"value\": false},
                {\"name\": \"urlBase\", \"value\": \"\"},
                {\"name\": \"apiKey\", \"value\": \"${SABNZBD_API_KEY}\"},
                {\"name\": \"username\", \"value\": \"\"},
                {\"name\": \"password\", \"value\": \"\"},
                {\"name\": \"category\", \"value\": \"prowlarr\"}
              ],
              \"implementationName\": \"SABnzbd\",
              \"implementation\": \"Sabnzbd\",
              \"configContract\": \"SabnzbdSettings\",
              \"tags\": []
            }" 2>&1)

          HTTP_STATUS=$(echo "$RESPONSE" | grep -o "HTTP_STATUS:[0-9]*" | cut -d: -f2)
          BODY=$(echo "$RESPONSE" | sed '/HTTP_STATUS:/d')

          echo "Prowlarr Response: $BODY"
          echo "Prowlarr HTTP Status: $HTTP_STATUS"

          if [ "$HTTP_STATUS" = "201" ] || [ "$HTTP_STATUS" = "200" ]; then
            echo "Successfully added SABnzbd download client to Prowlarr!"
          elif [ "$HTTP_STATUS" = "400" ] && echo "$BODY" | grep -q "already exists"; then
            echo "SABnzbd download client already exists in Prowlarr"
          else
            echo "Failed to add SABnzbd download client to Prowlarr"
          fi

          # Add SABnzbd to Bazarr
          echo "Adding SABnzbd download client to Bazarr..."
          RESPONSE=$(curl -w "\nHTTP_STATUS:%{http_code}" -X POST http://bazarr:6767/api/downloadclient \
            -H "X-Api-Key: $BAZARR_API_KEY" \
            -H "Content-Type: application/json" \
            -d "{
              \"enable\": true,
              \"protocol\": \"usenet\",
              \"priority\": 1,
              \"name\": \"SABnzbd\",
              \"fields\": [
                {\"name\": \"host\", \"value\": \"sabnzbd\"},
                {\"name\": \"port\", \"value\": 8080},
                {\"name\": \"useSsl\", \"value\": false},
                {\"name\": \"urlBase\", \"value\": \"\"},
                {\"name\": \"apiKey\", \"value\": \"${SABNZBD_API_KEY}\"},
                {\"name\": \"username\", \"value\": \"\"},
                {\"name\": \"password\", \"value\": \"\"},
                {\"name\": \"category\", \"value\": \"bazarr\"}
              ],
              \"implementationName\": \"SABnzbd\",
              \"implementation\": \"Sabnzbd\",
              \"configContract\": \"SabnzbdSettings\",
              \"tags\": []
            }" 2>&1)

          HTTP_STATUS=$(echo "$RESPONSE" | grep -o "HTTP_STATUS:[0-9]*" | cut -d: -f2)
          BODY=$(echo "$RESPONSE" | sed '/HTTP_STATUS:/d')

          echo "Bazarr Response: $BODY"
          echo "Bazarr HTTP Status: $HTTP_STATUS"

          if [ "$HTTP_STATUS" = "201" ] || [ "$HTTP_STATUS" = "200" ]; then
            echo "Successfully added SABnzbd download client to Bazarr!"
          elif [ "$HTTP_STATUS" = "400" ] && echo "$BODY" | grep -q "already exists"; then
            echo "SABnzbd download client already exists in Bazarr"
          else
            echo "Failed to add SABnzbd download client to Bazarr"
          fi

          echo "Download client setup complete!"