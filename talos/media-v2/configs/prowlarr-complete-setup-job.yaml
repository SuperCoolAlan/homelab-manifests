apiVersion: batch/v1
kind: Job
metadata:
  name: prowlarr-complete-setup
  namespace: media-v2
spec:
  ttlSecondsAfterFinished: 300
  template:
    spec:
      restartPolicy: OnFailure
      serviceAccountName: media-setup
      containers:
      - name: setup
        image: alpine/k8s:1.30.8
        command: ["/bin/sh"]
        env:
        - name: NZBGEEK_API_KEY
          valueFrom:
            secretKeyRef:
              name: media-api-keys
              key: nzbgeek-api-key
        args:
        - -c
        - |
          set -e
          
          # Function to get API key from service config
          get_api_key() {
            SERVICE=$1
            PORT=$2
            CONFIG_PATH=$3
            
            echo "Fetching API key for $SERVICE..."
            # Use kubectl exec to get the API key from the service's config.xml
            API_KEY=$(kubectl exec -n media-v2 deploy/$SERVICE -- cat $CONFIG_PATH 2>/dev/null | sed -n 's/.*<ApiKey>\(.*\)<\/ApiKey>.*/\1/p' | head -1)
            
            if [ -z "$API_KEY" ]; then
              echo "Failed to get API key for $SERVICE"
              exit 1
            fi
            
            echo "Got API key for $SERVICE"
            echo "$API_KEY"
          }
          
          # Get API keys from running services
          PROWLARR_API_KEY=$(get_api_key "prowlarr" "9696" "/config/config.xml")
          SONARR_API_KEY=$(get_api_key "sonarr" "8989" "/config/config.xml")
          RADARR_API_KEY=$(get_api_key "radarr" "7878" "/config/config.xml")
          
          # Wait for all services to be ready
          echo "Waiting for Prowlarr to be ready..."
          COUNTER=0
          until curl -s http://prowlarr:9696/prowlarr/api/v1/system/status -H "X-Api-Key: $PROWLARR_API_KEY" 2>/dev/null | grep -q "version" || [ $COUNTER -eq 60 ]; do
            echo "Prowlarr not ready yet, waiting..."
            sleep 5
            COUNTER=$((COUNTER + 1))
          done
          
          echo "Waiting for Sonarr to be ready..."
          until curl -f http://sonarr:8989/api/v3/system/status -H "X-Api-Key: $SONARR_API_KEY" 2>/dev/null; do
            sleep 5
          done
          
          echo "Waiting for Radarr to be ready..."
          until curl -f http://radarr:7878/api/v3/system/status -H "X-Api-Key: $RADARR_API_KEY" 2>/dev/null; do
            sleep 5
          done
          
          echo "All services are ready!"
          
          # 1. Add Sonarr to Prowlarr
          echo "Checking if Sonarr is already in Prowlarr..."
          APPS=$(curl -s http://prowlarr:9696/prowlarr/api/v1/applications -H "X-Api-Key: $PROWLARR_API_KEY")
          
          if ! echo "$APPS" | grep -q '"name":"Sonarr"'; then
            echo "Adding Sonarr to Prowlarr..."
            curl -X POST http://prowlarr:9696/prowlarr/api/v1/applications \
              -H "X-Api-Key: $PROWLARR_API_KEY" \
              -H "Content-Type: application/json" \
              -d "{
                \"name\": \"Sonarr\",
                \"syncLevel\": \"fullSync\",
                \"implementation\": \"Sonarr\",
                \"configContract\": \"SonarrSettings\",
                \"fields\": [
                  {\"name\": \"prowlarrUrl\", \"value\": \"http://prowlarr:9696/prowlarr\"},
                  {\"name\": \"baseUrl\", \"value\": \"http://sonarr:8989\"},
                  {\"name\": \"apiKey\", \"value\": \"$SONARR_API_KEY\"},
                  {\"name\": \"syncCategories\", \"value\": [5000, 5010, 5020, 5030, 5040, 5045, 5050]}
                ],
                \"tags\": []
              }"
            echo "Sonarr added to Prowlarr"
          else
            echo "Sonarr already exists in Prowlarr"
          fi
          
          # 2. Add Radarr to Prowlarr
          echo "Checking if Radarr is already in Prowlarr..."
          if ! echo "$APPS" | grep -q '"name":"Radarr"'; then
            echo "Adding Radarr to Prowlarr..."
            curl -X POST http://prowlarr:9696/prowlarr/api/v1/applications \
              -H "X-Api-Key: $PROWLARR_API_KEY" \
              -H "Content-Type: application/json" \
              -d "{
                \"name\": \"Radarr\",
                \"syncLevel\": \"fullSync\",
                \"implementation\": \"Radarr\",
                \"configContract\": \"RadarrSettings\",
                \"fields\": [
                  {\"name\": \"prowlarrUrl\", \"value\": \"http://prowlarr:9696/prowlarr\"},
                  {\"name\": \"baseUrl\", \"value\": \"http://radarr:7878\"},
                  {\"name\": \"apiKey\", \"value\": \"$RADARR_API_KEY\"},
                  {\"name\": \"syncCategories\", \"value\": [2000, 2010, 2020, 2030, 2040, 2045, 2050, 2060]}
                ],
                \"tags\": []
              }"
            echo "Radarr added to Prowlarr"
          else
            echo "Radarr already exists in Prowlarr"
          fi
          
          # 3. Add NZBgeek indexer if not exists
          echo "Checking existing indexers..."
          EXISTING_INDEXERS=$(curl -s http://prowlarr:9696/prowlarr/api/v1/indexer -H "X-Api-Key: $PROWLARR_API_KEY")
          
          if ! echo "$EXISTING_INDEXERS" | grep -q "NZBgeek"; then
            echo "Adding NZBgeek indexer to Prowlarr..."
            curl -X POST http://prowlarr:9696/prowlarr/api/v1/indexer \
              -H "X-Api-Key: $PROWLARR_API_KEY" \
              -H "Content-Type: application/json" \
              -d "{
                \"enable\": true,
                \"redirect\": false,
                \"name\": \"NZBgeek\",
                \"fields\": [
                  {\"name\": \"baseUrl\", \"value\": \"https://api.nzbgeek.info\"},
                  {\"name\": \"apiPath\", \"value\": \"/api\"},
                  {\"name\": \"apiKey\", \"value\": \"$NZBGEEK_API_KEY\"},
                  {\"name\": \"categories\", \"value\": [2000, 5000]},
                  {\"name\": \"animeCategories\", \"value\": []},
                  {\"name\": \"animeStandardFormatSearch\", \"value\": false},
                  {\"name\": \"additionalParameters\", \"value\": \"\"},
                  {\"name\": \"minimumSeeders\", \"value\": 1},
                  {\"name\": \"seedCriteria.seedRatio\", \"value\": \"\"},
                  {\"name\": \"seedCriteria.seedTime\", \"value\": \"\"},
                  {\"name\": \"seedCriteria.discographySeedTime\", \"value\": \"\"}
                ],
                \"implementationName\": \"Newznab\",
                \"implementation\": \"Newznab\",
                \"configContract\": \"NewznabSettings\",
                \"appProfileId\": 1,
                \"tags\": [],
                \"protocol\": \"usenet\",
                \"priority\": 25
              }"
            
            if [ $? -eq 0 ]; then
              echo "NZBgeek indexer added successfully"
            else
              echo "Failed to add NZBgeek indexer"
            fi
          else
            echo "NZBgeek indexer already configured"
          fi
          
          # 4. Force sync all indexers to applications
          echo "Forcing indexer sync to all applications..."
          sleep 5
          
          # Test all apps
          echo "Testing all applications..."
          curl -X POST http://prowlarr:9696/prowlarr/api/v1/applications/testall \
            -H "X-Api-Key: $PROWLARR_API_KEY" \
            -H "Content-Type: application/json" || true
          
          sleep 3
          
          # Sync all apps
          echo "Syncing indexers to all applications..."
          curl -X POST http://prowlarr:9696/prowlarr/api/v1/command \
            -H "X-Api-Key: $PROWLARR_API_KEY" \
            -H "Content-Type: application/json" \
            -d '{"name": "ApplicationIndexerSync"}' || true
          
          echo "Prowlarr complete setup finished!"
          
          # 5. Verify indexers in Radarr
          echo "Verifying indexers in Radarr..."
          sleep 5
          RADARR_INDEXERS=$(curl -s http://radarr:7878/api/v3/indexer -H "X-Api-Key: $RADARR_API_KEY")
          if echo "$RADARR_INDEXERS" | grep -q "NZBgeek"; then
            echo "✓ NZBgeek indexer found in Radarr"
          else
            echo "⚠ NZBgeek indexer not found in Radarr - may need manual sync"
          fi
          
          # 6. Verify indexers in Sonarr
          echo "Verifying indexers in Sonarr..."
          SONARR_INDEXERS=$(curl -s http://sonarr:8989/api/v3/indexer -H "X-Api-Key: $SONARR_API_KEY")
          if echo "$SONARR_INDEXERS" | grep -q "NZBgeek"; then
            echo "✓ NZBgeek indexer found in Sonarr"
          else
            echo "⚠ NZBgeek indexer not found in Sonarr - may need manual sync"
          fi
          
          echo "Setup complete!"