apiVersion: batch/v1
kind: Job
metadata:
  name: prowlarr-simple-setup
  namespace: media-v2
spec:
  ttlSecondsAfterFinished: 300
  template:
    spec:
      restartPolicy: OnFailure
      containers:
      - name: setup
        image: curlimages/curl:latest
        command: ["/bin/sh"]
        env:
        - name: NZBGEEK_API_KEY
          valueFrom:
            secretKeyRef:
              name: media-api-keys
              key: nzbgeek-api-key
        args:
        - -c
        - |
          set -e
          
          # Hardcode the API keys that we know are correct
          PROWLARR_API_KEY="173db0f2d3464d5ca213aa166e5a3eef"
          SONARR_API_KEY="5097a715fb084ca1ab07670ef50dcd68"
          RADARR_API_KEY="1ac50a71923a4e9589e028dbc89140a3"
          
          echo "Using known API keys:"
          echo "Prowlarr: $PROWLARR_API_KEY"
          echo "Sonarr: $SONARR_API_KEY"
          echo "Radarr: $RADARR_API_KEY"
          
          # Wait for Prowlarr to be ready
          echo "Waiting for Prowlarr to be ready..."
          COUNTER=0
          until [ $COUNTER -eq 60 ]; do
            if curl -s http://prowlarr:9696/prowlarr/api/v1/system/status -H "X-Api-Key: $PROWLARR_API_KEY" | grep -q "version"; then
              echo "Prowlarr is ready!"
              break
            fi
            echo "Prowlarr not ready yet, waiting... (attempt $COUNTER/60)"
            sleep 5
            COUNTER=$((COUNTER + 1))
          done
          
          if [ $COUNTER -eq 60 ]; then
            echo "Prowlarr did not become ready in time"
            exit 1
          fi
          
          # 1. Add Sonarr to Prowlarr
          echo "Checking if Sonarr is already in Prowlarr..."
          APPS=$(curl -s http://prowlarr:9696/prowlarr/api/v1/applications -H "X-Api-Key: $PROWLARR_API_KEY")
          echo "Current apps: $APPS"
          
          if ! echo "$APPS" | grep -q '"name":"Sonarr"'; then
            echo "Adding Sonarr to Prowlarr..."
            RESPONSE=$(curl -X POST http://prowlarr:9696/prowlarr/api/v1/applications \
              -H "X-Api-Key: $PROWLARR_API_KEY" \
              -H "Content-Type: application/json" \
              -d "{
                \"name\": \"Sonarr\",
                \"syncLevel\": \"fullSync\",
                \"implementation\": \"Sonarr\",
                \"configContract\": \"SonarrSettings\",
                \"fields\": [
                  {\"name\": \"prowlarrUrl\", \"value\": \"http://prowlarr:9696/prowlarr\"},
                  {\"name\": \"baseUrl\", \"value\": \"http://sonarr:8989\"},
                  {\"name\": \"apiKey\", \"value\": \"$SONARR_API_KEY\"},
                  {\"name\": \"syncCategories\", \"value\": [5000, 5010, 5020, 5030, 5040, 5045, 5050]}
                ],
                \"tags\": []
              }" 2>&1)
            echo "Response: $RESPONSE"
          else
            echo "Sonarr already exists in Prowlarr"
          fi
          
          # 2. Add Radarr to Prowlarr
          echo "Checking if Radarr is already in Prowlarr..."
          if ! echo "$APPS" | grep -q '"name":"Radarr"'; then
            echo "Adding Radarr to Prowlarr..."
            RESPONSE=$(curl -X POST http://prowlarr:9696/prowlarr/api/v1/applications \
              -H "X-Api-Key: $PROWLARR_API_KEY" \
              -H "Content-Type: application/json" \
              -d "{
                \"name\": \"Radarr\",
                \"syncLevel\": \"fullSync\",
                \"implementation\": \"Radarr\",
                \"configContract\": \"RadarrSettings\",
                \"fields\": [
                  {\"name\": \"prowlarrUrl\", \"value\": \"http://prowlarr:9696/prowlarr\"},
                  {\"name\": \"baseUrl\", \"value\": \"http://radarr:7878\"},
                  {\"name\": \"apiKey\", \"value\": \"$RADARR_API_KEY\"},
                  {\"name\": \"syncCategories\", \"value\": [2000, 2010, 2020, 2030, 2040, 2045, 2050, 2060]}
                ],
                \"tags\": []
              }" 2>&1)
            echo "Response: $RESPONSE"
          else
            echo "Radarr already exists in Prowlarr"
          fi
          
          # 3. Add NZBgeek indexer
          echo "Checking existing indexers..."
          INDEXERS=$(curl -s http://prowlarr:9696/prowlarr/api/v1/indexer -H "X-Api-Key: $PROWLARR_API_KEY")
          echo "Current indexers count: $(echo "$INDEXERS" | grep -o "\"id\"" | wc -l)"
          
          if ! echo "$INDEXERS" | grep -q "NZBgeek"; then
            echo "Adding NZBgeek indexer..."
            RESPONSE=$(curl -X POST http://prowlarr:9696/prowlarr/api/v1/indexer \
              -H "X-Api-Key: $PROWLARR_API_KEY" \
              -H "Content-Type: application/json" \
              -d "{
                \"enable\": true,
                \"redirect\": false,
                \"name\": \"NZBgeek\",
                \"fields\": [
                  {\"name\": \"baseUrl\", \"value\": \"https://api.nzbgeek.info\"},
                  {\"name\": \"apiPath\", \"value\": \"/api\"},
                  {\"name\": \"apiKey\", \"value\": \"$NZBGEEK_API_KEY\"}
                ],
                \"implementationName\": \"Newznab\",
                \"implementation\": \"Newznab\",
                \"configContract\": \"NewznabSettings\",
                \"appProfileId\": 1,
                \"tags\": [],
                \"protocol\": \"usenet\",
                \"priority\": 25
              }" 2>&1)
            echo "Add indexer response: $RESPONSE"
          else
            echo "NZBgeek already exists"
          fi
          
          # 4. Trigger sync
          echo "Triggering application sync..."
          curl -X POST http://prowlarr:9696/prowlarr/api/v1/command \
            -H "X-Api-Key: $PROWLARR_API_KEY" \
            -H "Content-Type: application/json" \
            -d '{"name": "ApplicationIndexerSync"}' || true
          
          echo "Setup complete!"