apiVersion: batch/v1
kind: Job
metadata:
  name: jellyseerr-setup
  namespace: media-v2
spec:
  template:
    spec:
      restartPolicy: OnFailure
      containers:
      - name: setup
        image: curlimages/curl:latest
        command: ["/bin/sh"]
        env:
        - name: SONARR_API_KEY
          valueFrom:
            secretKeyRef:
              name: media-api-keys
              key: sonarr-api-key
        - name: RADARR_API_KEY
          valueFrom:
            secretKeyRef:
              name: media-api-keys
              key: radarr-api-key
        args:
        - -c
        - |
          set -e
          echo "Waiting for Jellyseerr to be ready..."
          # Jellyseerr takes longer to start, so we'll wait up to 2 minutes
          COUNTER=0
          until curl -f http://jellyseerr:5055/api/v1/status 2>/dev/null || [ $COUNTER -eq 24 ]; do
            echo "Jellyseerr not ready yet, waiting... (attempt $COUNTER/24)"
            sleep 5
            COUNTER=$((COUNTER + 1))
          done
          
          if [ $COUNTER -eq 24 ]; then
            echo "Jellyseerr did not become ready in time. It may need manual configuration."
            exit 0
          fi
          
          echo "Jellyseerr is ready!"
          
          # Note: Jellyseerr requires initial setup through the web UI
          # This includes:
          # 1. Setting up admin account
          # 2. Configuring Jellyfin/Plex connection (if applicable)
          # 3. Adding Sonarr/Radarr servers
          
          # We can pre-configure some settings once the initial setup is done
          echo "Jellyseerr requires initial setup through the web UI at http://jellyseerr.asandov.local/"
          echo ""
          echo "Jellyfin server configuration:"
          echo "  - URL: http://jellyfin.asandov.local"
          echo "  - Or internal: http://external-truenas:30013"
          echo ""
          echo "After initial setup, configure the following:"
          echo "1. Sonarr:"
          echo "   - URL: http://sonarr:8989"
          echo "   - API Key is stored in secret 'media-api-keys' key 'sonarr-api-key'"
          echo ""
          echo "2. Radarr:"
          echo "   - URL: http://radarr:7878"
          echo "   - API Key is stored in secret 'media-api-keys' key 'radarr-api-key'"
          echo ""
          echo "3. Configure quality profiles and root folders as needed"
          
          # Create a ConfigMap with the connection details for reference (without exposing secrets)
          cat <<EOF | kubectl apply -f -
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: jellyseerr-connection-info
            namespace: media-v2
          data:
            sonarr-url: "http://sonarr:8989"
            radarr-url: "http://radarr:7878"
            jellyseerr-url: "https://jellyseerr.asandov.local/"
            note: "API keys are stored in secret 'media-api-keys'"
          EOF
          
          echo "Connection info saved to ConfigMap 'jellyseerr-connection-info'"