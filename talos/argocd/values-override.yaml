# ArgoCD values override for Talos cluster
global:
  image:
    tag: v3.1.3

configs:
  params:
    # Enable Helm support and alpha plugins (including ksops) in Kustomize builds
    kustomize.buildOptions: "--enable-helm --enable-alpha-plugins --enable-exec"
    # Keep the insecure mode we just configured
    server.insecure: true

# Install ksops in standard ArgoCD repo server
repoServer:
  env:
    - name: KUSTOMIZE_PLUGIN_HOME
      value: /home/argocd/.config/kustomize/plugin
    - name: XDG_CONFIG_HOME
      value: /home/argocd/.config
    - name: PATH
      value: /home/argocd/.config/kustomize/plugin/viaduct.ai/v1/ksops:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
  volumes:
    - name: custom-tools
      emptyDir: {}
    - name: gnupg-home
      emptyDir: {}
    - name: sops-gpg
      secret:
        secretName: sops-gpg
  volumeMounts:
    - name: custom-tools
      mountPath: /home/argocd/.config/kustomize/plugin/viaduct.ai/v1/ksops
    - name: gnupg-home
      mountPath: /home/argocd/.gnupg
  initContainers:
    - name: install-ksops
      image: viaductoss/ksops:v4.3.2
      command: ["/bin/sh", "-c"]
      args:
        - |
          echo "Installing ksops..."
          cp /usr/local/bin/ksops /custom-tools/ksops
          chmod +x /custom-tools/ksops
          echo "ksops installation complete"
      volumeMounts:
        - name: custom-tools
          mountPath: /custom-tools
      securityContext:
        runAsUser: 999
        runAsGroup: 999
        runAsNonRoot: false
    - name: import-gpg
      image: quay.io/argoproj/argocd:v3.1.3
      command: ["/bin/sh", "-c"]
      args:
        - |
          echo "Setting up GPG..."
          export GNUPGHOME=/gnupg-home
          mkdir -p /gnupg-home
          chmod 700 /gnupg-home
          echo "Importing GPG key..."
          if [ -f /sops-gpg/sops.asc ]; then
            echo "use-agent" >> /gnupg-home/gpg.conf
            echo "pinentry-mode loopback" >> /gnupg-home/gpg.conf
            gpg --batch --import /sops-gpg/sops.asc 2>&1
            echo "GPG key imported successfully"
            # List keys to verify
            gpg --list-secret-keys 2>&1 || true
          else
            echo "No GPG key found to import"
          fi
          echo "GPG setup complete"
      volumeMounts:
        - name: gnupg-home
          mountPath: /gnupg-home
        - name: sops-gpg
          mountPath: /sops-gpg
          readOnly: true
      securityContext:
        runAsUser: 999
        runAsGroup: 999
        runAsNonRoot: true